#!/usr/bin/env Rscript
#./sample_expr_dist -m meta.rds -r rpkm.rds -o sample.expr.dens.pdf


###
#Get opt
###
library('getopt')

argv = commandArgs(trailingOnly = F)  
scriptPath = dirname(sub("--file=", "", argv[grep("--file", argv)]))
#source(file.path(scriptPath, '../lib/getopt.R')) #If one wants to avoid dependency of installed R package (getopt).
argv = commandArgs(trailingOnly = T)

spec = matrix(c(
  'meta.file', 'm', 1, 'character',
  'rpkm.file', 'r', 1, 'character',
  'sampledist.pdf', 'o', 1, 'character',
  'strat.factor', 's', 1, 'character',
  'lib.dir', 'l', 1, 'character',
  'help', 'h', 0, 'logical'
), byrow=TRUE, ncol=4);
opt = getopt(spec)

usage <- function(spec){
  cat(getopt(spec, command = 'sample_expr_dist', usage=TRUE));
  cat(sprintf("Plot smoothed sample expression histogram\n"))
  cat(sprintf(" -m meta.file\n\tInput file in rds-format, containing mapping statistics (output by the program get_meta).\n"))
  cat(sprintf(" -r rpkm.file\n\tInput file in rds-format, containing normalized read counts for all samples and features (output by the program get_expr).\n"))
  cat(sprintf(" -o sampledist.pdf\n\tOutput file to which the plot is printed. Default: sample.expr.dens.pdf\n"))
  cat(sprintf(" -s strat.factor\n\tStratification factor, which will group the samples in some of the plots. Default: nostrat.\n"))
  cat(sprintf(" -l lib.dir\n\tLibrary directory with required R functions. Default: A subdir residing at '../lib' relative to where this program was executed from.\n\n"))
  q(status=1);
}

#Print usage if help flag set
if(!is.null(opt[['help']])){
  usage(spec)
}

#Error check that all required options were set
if(is.null(opt[['meta.file']])){warning('Error: "m" is a required option'); usage(spec);}
if(is.null(opt[['rpkm.file']])){warning('Error: "r" is a required option'); usage(spec);}

#Set defaults for optional options
if(is.null(opt[['sampledist.pdf']])){opt[['sampledist.pdf']] = 'sample.expr.dens.pdf';}
if(is.null(opt[['strat.factor']])){opt[['strat.factor']] = 'nostrat';}
if(is.null(opt[['lib.dir']])){opt[['lib.dir']] = file.path(scriptPath, '../lib');}


###
#Source fcn libs
###
source(file.path(opt[['lib.dir']], 'expr.lib.R'), chdir = TRUE)
source(file.path(opt[['lib.dir']], 'main.lib.R'), chdir = TRUE)


###
#Execute
###
sample.expr.dhist(opt[['meta.file']], opt[['rpkm.file']], opt[['sampledist.pdf']], opt[['strat.factor']])
