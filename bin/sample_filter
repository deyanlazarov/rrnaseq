#!/usr/bin/env Rscript
#sample_filter -d rpkm.rds -q qc.rds -o rpkm.postqc.rds -f n.genes.expr,spearman.cor



###
#Get opt
###
library('getopt')

argv = commandArgs(trailingOnly = F)  
scriptPath = dirname(sub("--file=", "", argv[grep("--file", argv)]))
#source(file.path(scriptPath, '../lib/getopt.R')) #If one wants to avoid dependency of installed R package (getopt).
argv = commandArgs(trailingOnly = T)

spec = matrix(c(
  'data.file', 'd', 1, 'character',
  'qc.meta.file', 'q', 1, 'character',
  'out.file', 'o', 1, 'character',
  'filter.cols', 'f', 1, 'character',
  'lib.dir', 'l', 1, 'character',
  'help', 'h', 0, 'logical'
), byrow=TRUE, ncol=4);
opt = getopt(spec)

usage <- function(spec){
  cat(getopt(spec, command = 'sample_filter', usage=TRUE));
  cat(sprintf("Filter samples based on qc-measures\n"))
  cat(sprintf(" -d data.file\n\tInput file in rds-format, containing data to be filtered (typically, either rpkm.rds or counts.rds).\n"))
  cat(sprintf(" -q qc.meta.file\n\tInput file in rds-format in which qc-failed samples are stored.\n"))
  cat(sprintf(" -o out.file\n\tOutput file where the qc-filtered data.file is saved.\n"))
  cat(sprintf(" -f filter.cols\n\tComma-separated list specifying the columns within qc.meta.file to filter on. No spaces allowed. The value 'all' can also be given, which will filter on all columns in qc.meta.file. Default: 'all'\n"))
  cat(sprintf(" -l lib.dir\n\tLibrary directory with required R functions. Default: A subdir residing at '../lib' relative to where this program was executed from.\n\n"))
  q(status=1);
}

#Print usage if help flag set
if(!is.null(opt[['help']])){
  usage(spec)
}

#Error check that all required options were set
if(is.null(opt[['data.file']])){warning('Error: "d" is a required option'); usage(spec);}
if(is.null(opt[['qc.meta.file']])){warning('Error: "q" is a required option'); usage(spec);}
if(is.null(opt[['out.file']])){warning('Error: "o" is a required option'); usage(spec);}

#Set defaults for optional options
if(is.null(opt[['filter.cols']])){opt[['filter.cols']] = 'all';}
if(is.null(opt[['lib.dir']])){opt[['lib.dir']] = file.path(scriptPath, '../lib');}


###
#Source fcn libs
###
source(file.path(opt[['lib.dir']], 'main.lib.R'), chdir = TRUE)


###
#Execute
###
sample.filter(opt[['data.file']], opt[['qc.meta.file']], opt[['out.file']], opt[['filter.cols']])
